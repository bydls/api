;

jQuery(function () {
    $("body").on('click', '[data-stopPropagation]', function (e) {
        e.stopPropagation();
    });

    // 滚动条
    const ps = new PerfectScrollbar('.lyear-layout-sidebar-scroll', {
        swipeEasing: false,
        suppressScrollX: true
    });

    // 侧边栏
    $(".lyear-aside-toggler").bind('click', function () {
        $('.lyear-layout-sidebar').toggleClass('lyear-aside-open');
        $("body").toggleClass('lyear-layout-sidebar-close');

        if ($('.lyear-mask-modal').length == 0) {
            $('<div class="lyear-mask-modal"></div>').prependTo('body');
        } else {
            $('.lyear-mask-modal').remove();
        }
        $('.lyear-mask-modal').on('click', function () {
            $(this).remove();
            $('.lyear-layout-sidebar').toggleClass('lyear-aside-open');
            $('body').toggleClass('lyear-layout-sidebar-close');
        });
    });

    // 侧边栏导航
    $('.nav-item-has-subnav > a').on('click', function () {
        $subnavToggle = jQuery(this);
        $navHasSubnav = $subnavToggle.parent();
        $topHasSubNav = $subnavToggle.parents('.nav-item-has-subnav').last();
        $subnav = $navHasSubnav.find('.nav-subnav').first();
        $viSubHeight = $navHasSubnav.siblings().find('.nav-subnav:visible').outerHeight();
        $scrollBox = $('.lyear-layout-sidebar-scroll');
        $navHasSubnav.siblings().find('.nav-subnav:visible').slideUp(500).parent().removeClass('open');
        $subnav.slideToggle(300, function () {
            $navHasSubnav.toggleClass('open');

            // 新增滚动条处理
            var scrollHeight = 0;
            pervTotal = $topHasSubNav.prevAll().length,
                boxHeight = $scrollBox.outerHeight(),
                innerHeight = $('.sidebar-main').outerHeight(),
                thisScroll = $scrollBox.scrollTop(),
                thisSubHeight = $(this).outerHeight(),
                footHeight = 121;

            if (footHeight + innerHeight - boxHeight >= (pervTotal * 48)) {
                scrollHeight = pervTotal * 48;
            }
            if ($subnavToggle.parents('.nav-item-has-subnav').length == 1) {
                $scrollBox.animate({scrollTop: scrollHeight}, 300);
            } else {
                // 子菜单操作
                if (typeof ($viSubHeight) != 'undefined' && $viSubHeight != null) {
                    scrollHeight = thisScroll + thisSubHeight - $viSubHeight;
                    $scrollBox.animate({scrollTop: scrollHeight}, 300);
                } else {
                    if ((thisScroll + boxHeight - $scrollBox[0].scrollHeight) == 0) {
                        scrollHeight = thisScroll - thisSubHeight;
                        $scrollBox.animate({scrollTop: scrollHeight}, 300);
                    }
                }
            }
        });
    });

    // 提示
    if ($('[data-toggle="tooltip"]')[0]) {
        $('[data-toggle="tooltip"]').tooltip({
            "container": 'body',
        });
    }

    // 弹出框
    if ($('[data-toggle="popover"]')[0]) {
        $('[data-toggle="popover"]').popover();
    }

    // 标签
    if ($('.js-tags-input')[0]) {
        $('.js-tags-input').tagsInput({
            height: '36px',
            width: '100%',
            defaultText: $('.js-tags-input').attr("placeholder"),
            removeWithBackspace: true,
            delimiter: [',']
        });
    }

    // 时间选择
    jQuery('.js-datetimepicker').each(function () {
        var $input = jQuery(this);
        $input.datetimepicker({
            format: $input.data('format') ? $input.data('format') : false,
            useCurrent: $input.data('use-current') ? $input.data('use-current') : false,
            locale: moment.locale('' + ($input.data('locale') ? $input.data('locale') : '') + ''),
            showTodayButton: $input.data('show-today-button') ? $input.data('show-today-button') : false,
            showClear: $input.data('show-clear') ? $input.data('show-clear') : false,
            showClose: $input.data('show-close') ? $input.data('show-close') : false,
            sideBySide: $input.data('side-by-side') ? $input.data('side-by-side') : false,
            inline: $input.data('inline') ? $input.data('inline') : false,
        });
    });

    // 日期选择
    jQuery('.js-datepicker').each(function () {
        var $input = jQuery(this);
        $input.datepicker({
            weekStart: 1,
            autoclose: true,
            todayHighlight: true,
            language: 'zh-CN',
        });
    });

    // 颜色选取
    jQuery('.js-colorpicker').each(function () {
        var $colorpicker = jQuery(this);
        var $colorpickerMode = $colorpicker.data('colorpicker-mode') ? $colorpicker.data('colorpicker-mode') : 'hex';
        var $colorpickerinline = $colorpicker.data('colorpicker-inline') ? true : false;
        $colorpicker.colorpicker({
            'format': $colorpickerMode,
            'inline': $colorpickerinline
        });
    });

    // 复选框全选
    $("#check-all").change(function () {
        $("input[type='checkbox']").prop('checked', $(this).prop("checked"));
    });

    // 设置主题配色
    setTheme = function (input_name, data_name) {
        $("input[name='" + input_name + "']").click(function () {
            $('body').attr(data_name, $(this).val());
        });
    }
    setTheme('site_theme', 'data-theme');
    setTheme('logo_bg', 'data-logobg');
    setTheme('header_bg', 'data-headerbg');
    setTheme('sidebar_bg', 'data-sidebarbg');


    getNavLeft();
    layui.use(['layer'], function () {
        var layer = layui.layer;
    });

});

var count_data=null,count=0;
function selectNav() {
    let pathname=window.location.pathname,path=(pathname.substr(1,pathname.length-6)).replace('/','-');
    path= path.toLocaleLowerCase ();
    $('.sidebar-main .'+path).parents('li.nav-item').addClass('open');
    console.log(path);
    if (path == 'api-lists') {
        let id=getQueryString('id'),path_id = path+'-' + id;
        $('.sidebar-main .' + path).parent('ul.nav-subnav').show();
        $('.' + path_id).addClass('active');
    } else if (path == 'api-editapi' || path == 'api-test' || path == 'api-show') {
        let id=getQueryString('pid'),path_id = path+'-' + id;
        $('.sidebar-main .api-lists').parent('ul.nav-subnav').show();
        $('.api-lists-' + path_id).addClass('active');
    } else {
        $('.sidebar-main .' + path).parent('ul.nav-subnav').show().end().addClass('active');
    }
}

function getNavLeft() {
    ajax('system/count', '', function (data) {
            let html = route = '';
            $.each(data.project_info, function (i, v) {
                route = {'id': v.id};
                html += ' <li class="api-lists api-lists-"' + v.id + '>' +
                    '<a  href="javascript:;" class="go_this_window_route" data-url="api/lists" data-route=\'' + JSON.stringify(route) + '\'>' +
                    '<i class="mdi mdi-chevron-right"></i> ' + v.title +
                    '</a> ' +
                    '</li>';
            });
            $('#left-nav-html').html(html);
            count_data=data;
            selectNav();
            if ($('.' + BJ.btn.list_search_class).length > 0) {
                $('.' + BJ.btn.list_search_class).click();
            }
    });
}


function getModule(project_id) {
    if (!project_id) return false;
    ajax('project/module/list', {project_id: project_id}, function (data) {
        if (data.data.length > 1) {
            let html = '<option value="0">请选择模块</option>';
            $.each(data.data, function (i, v) {
                html += ' <option value="' + v.id + '">' + v.title + '</option>';
            });
            $('.bj-api-model-list').html(html);
        }
    });
}

function getProjectID() {
    let project_id = 0;
    var this_href = window.location.href;
    if (this_href.indexOf("id=") > -1) {
        var temp = this_href.split('=');
        if (temp[1]) {
            project_id = temp[1];
        }
    }
    return project_id;
}

{/*表单 提交*/
}
$(document).on('click', '.' + BJ.btn.from_sub_class, function () {
    let doc = $(this), form = doc.parents('form'), serializer = form.serializeArray();
    let url = form.data('url'), callback_url = form.data('callback_url'), ajax_data = {};
    $(serializer).each(function (i) {
        ajax_data[this.name] = this.value
    });

    ajax(url, ajax_data, function (data) {
        if(callback_url&&callback_url!=undefined){
            window.location.href = BJ.url.web + callback_url + '.html';
        }else{
            location.reload();
        }

    })
})


{/*列表查询*/
}

$(document).on('click', '.' + BJ.btn.list_search_class, function () {
    page = 1;
    console.log(count_data);
    if( $('.' + BJ.btn.list_search_class).parents('form').data('url').indexOf("api/lists")>-1){
        count=count_data.count.list_info[project_id];
    }else if($('.' + BJ.btn.list_search_class).parents('form').data('url').indexOf("log/action")>-1){
        count=count_data.count.action_all;
    }
    getPage();
})


function listFormSubmit() {
    let doc = $('.' + BJ.btn.list_search_class);
    let url = doc.parents('form').data('url'), obj = doc.parents('form').data('list'), ajax_data = {};
    $(doc.parents('form').serializeArray()).each(function (i) {
        ajax_data[this.name] = this.value
    });
    ajax_data['page'] = page;
    ajax_data['size'] = $('.layui-laypage-limits select').val();
    ajax(url, ajax_data, function (data) {
        log_count = data.total;
        $('#' + obj).html(template(obj + "-html", data));
    })
}

function getPage() {

    layui.use(['element', 'form', 'laypage'], function () {
        var element = layui.element, form = layui.form, laypage = layui.laypage;
        laypage.render({
            elem: 'page',
            count: count,
            layout: ['count', 'prev', 'page', 'next', 'limit', 'refresh', 'skip'],
            jump: function (obj) {
                page=obj.curr;
                listFormSubmit();
            }
        });
    });
}


{/*删除数据*/
}
$(document).on('click', '.' + BJ.btn.del_this_class, function () {
    let doc = $(this);
    let url = doc.parents('table').data('del_url'), id = doc.data('id'),
        ajax_data = {id: id};
    layer.confirm('确定删除吗?', {icon: 3, title: '友情提示'}, function (index) {
        ajax(url, ajax_data, function (data) {
            location.reload();
        })
    });

})

$(document).on('click', '.' + BJ.btn.del_this_class_2, function () {
    let doc = $(this);
    let url = doc.parents('table').data('del_url_2'), id = doc.data('id'),
        ajax_data = {id: id};
    layer.confirm('确定删除吗?', {icon: 3, title: '友情提示'}, function (index) {
        ajax(url, ajax_data, function (data) {
            layer.closeAll();
            doc.parents('tr').remove();
        })
    });

})


